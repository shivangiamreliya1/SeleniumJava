package selenium.configuration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.Select;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseConfig {

	public static WebDriver driver;

	public static void config() {

		WebDriverManager.chromedriver().setup();
		// not to update the chrome driver executable file .exe

		ChromeOptions options = new ChromeOptions();
		options.addArguments("--disable-notifications", "start-maximized", "incognito");

		driver = new ChromeDriver(options);

	}

	public static void baseMethod(WebElement staticDropdown, String visibleText, String value, String flag) {

		Select select = new Select(staticDropdown);
		if (flag.contains("text")) {

			select.selectByVisibleText(visibleText);

		} else {
			select.selectByValue(value);
		}
		
		/*
		 * driver.findElement(By.cssSelector("select[id*='DropDownListCurrency']")).
		 * click(); driver.findElement(By.xpath("//*[@value='AED']")).click();
		 */
	}

	public static void baseMethod(WebElement s, int i) {

		Select select = new Select(s);
		select.selectByIndex(i);
	}
	
	// assignment :
	
	public static void addPassengerCount (WebElement passengers, int adultCount, int children, int infant) {
		passengers.click();
		WebElement adult = driver.findElement(By.cssSelector("div[data-testid= 'Adult-testID-plus-one-cta']"));
		WebElement child = driver.findElement(By.cssSelector("div[data-testid= 'Children-testID-plus-one-cta']"));
		WebElement infant = driver.findElement(By.cssSelector("div[data-testid= 'Adult-testID-plus-one-cta']"));
		
		while (adultCount >=1) {
			
		}
		
	}
	
	//tag[contains((@attribute,’containing text’)] 
	

}
